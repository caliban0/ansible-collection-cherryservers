---
- name: Run tests
  block:
    - name: create first server
      cherryservers.cloud.server:
        auth_token: "{{ cherryservers_api_key }}"
        region: "{{ server_region }}"
        project_id: "{{ cherryservers_project_id }}"
        plan: "{{ server_plan }}"
        tags: "{{ server_tags }}"
        state: "present"
      register: first_server
    - name: verify create first server
      ansible.builtin.assert:
        that:
          - first_server is changed

    - name: create second server
      cherryservers.cloud.server:
        auth_token: "{{ cherryservers_api_key }}"
        region: "{{ server_region }}"
        project_id: "{{ cherryservers_project_id }}"
        plan: "{{ server_plan }}"
        tags: "{{ server_tags }}"
        state: "active"
      register: second_server
    - name: verify create second server
      ansible.builtin.assert:
        that:
          - second_server is changed

    - name: test gather by project_id
      cherryservers.cloud.server_info:
        auth_token: "{{ cherryservers_api_key }}"
        project_id: "{{ cherryservers_project_id }}"
      register: result
    - name: verify gather by project_id
      ansible.builtin.assert:
        that:
          - result.cherryservers_servers | list | count >= 2
          - result is not changed

    - name: test gather by project_id with check mode
      cherryservers.cloud.server_info:
        auth_token: "{{ cherryservers_api_key }}"
        project_id: "{{ cherryservers_project_id }}"
      check_mode: true
      register: result
    - name: verify gather by project_id with check mode
      ansible.builtin.assert:
        that:
          - result.cherryservers_servers | list | count >= 2
          - result is not changed

    - name: test gather server by id
      cherryservers.cloud.server_info:
        auth_token: "{{ cherryservers_api_key }}"
        id: "{{ first_server.cherryservers_server.id }}"
      register: result
    - name: verify gather server by id
      ansible.builtin.assert:
        that:
          - result.cherryservers_servers | list | count == 1
          - result is not changed

    - name: test gather server by id with check mode
      cherryservers.cloud.server_info:
        auth_token: "{{ cherryservers_api_key }}"
        id: "{{ first_server.cherryservers_server.id }}"
      check_mode: true
      register: result
    - name: gather server by id with check mode
      ansible.builtin.assert:
        that:
          - result.cherryservers_servers | list | count == 1
          - result is not changed

    - name: test gather server by id wrong
      cherryservers.cloud.server_info:
        auth_token: "{{ cherryservers_api_key }}"
        id: "1234"
      register: result
      ignore_errors: true
    - name: verify gather server by id wrong
      ansible.builtin.assert:
        that:
          - result is failed

    - name: test gather server by hostname
      cherryservers.cloud.server_info:
        auth_token: "{{ cherryservers_api_key }}"
        project_id: "{{ cherryservers_project_id }}"
        hostname: "{{ second_server.cherryservers_server.hostname }}"
      register: result
    - name: verify gather server by hostname
      ansible.builtin.assert:
        that:
          - result.cherryservers_servers | list | count == 1
          - result is not changed

    - name: test gather server by hostname with check mode
      cherryservers.cloud.server_info:
        auth_token: "{{ cherryservers_api_key }}"
        project_id: "{{ cherryservers_project_id }}"
        hostname: "{{ second_server.cherryservers_server.hostname }}"
      check_mode: true
      register: result
    - name: gather server by hostname with check mode
      ansible.builtin.assert:
        that:
          - result.cherryservers_servers | list | count == 1
          - result is not changed

    - name: test gather server by hostname wrong
      cherryservers.cloud.server_info:
        auth_token: "{{ cherryservers_api_key }}"
        project_id: "{{ cherryservers_project_id }}"
        hostname: "none"
      register: result
    - name: verify gather server by hostname wrong
      ansible.builtin.assert:
        that:
          - result.cherryservers_servers | list | count == 0
          - result is not changed

    - name: test gather server by tags
      cherryservers.cloud.server_info:
        auth_token: "{{ cherryservers_api_key }}"
        project_id: "{{ cherryservers_project_id }}"
        tags: "{{ server_tags }}"
      register: result
    - name: verify gather server by tags
      ansible.builtin.assert:
        that:
          - result.cherryservers_servers | list | count == 2
          - result is not changed

    - name: test gather server by tags with check mode
      cherryservers.cloud.server_info:
        auth_token: "{{ cherryservers_api_key }}"
        project_id: "{{ cherryservers_project_id }}"
        tags: "{{ server_tags }}"
      check_mode: true
      register: result
    - name: gather server by tags with check mode
      ansible.builtin.assert:
        that:
          - result.cherryservers_servers | list | count == 2
          - result is not changed

    - name: test gather server by tags wrong
      cherryservers.cloud.server_info:
        auth_token: "{{ cherryservers_api_key }}"
        project_id: "{{ cherryservers_project_id }}"
        tags:
          env: "none"
      register: result
    - name: verify gather server by tags wrong
      ansible.builtin.assert:
        that:
          - result.cherryservers_servers | list | count == 0
          - result is not changed

    - name: test gather multiple options
      cherryservers.cloud.server_info:
        auth_token: "{{ cherryservers_api_key }}"
        tags: "{{ server_tags }}"
        project_id: "{{ cherryservers_project_id }}"
        hostname: "{{ second_server.cherryservers_server.hostname }}"
      register: result
    - name: verify gather multiple options
      ansible.builtin.assert:
        that:
          - result.cherryservers_servers | list | count == 1
          - result is not changed

    - name: test gather with all options
      cherryservers.cloud.server_info:
        auth_token: "{{ cherryservers_api_key }}"
        project_id: "{{ cherryservers_project_id }}"
        plan: "{{ second_server.cherryservers_server.plan }}"
        image: "{{ second_server.cherryservers_server.image }}"
        region: "{{ second_server.cherryservers_server.region }}"
        hostname: "{{ second_server.cherryservers_server.hostname }}"
        tags: "{{ server_tags }}"
        spot_market: "{{ second_server.cherryservers_server.spot_market }}"
      register: result
    - name: verify gather with all options
      ansible.builtin.assert:
        that:
          - result.cherryservers_servers | list | count == 1
          - result is not changed
  always:
    - name: delete first server
      cherryservers.cloud.server:
        id: "{{ first_server.cherryservers_server.id }}"
        state: "absent"
        auth_token: "{{ cherryservers_api_key }}"
      register: result
    - name: verify delete first server
      ansible.builtin.assert:
        that:
          - result is changed

    - name: delete second server
      cherryservers.cloud.server:
        id: "{{ second_server.cherryservers_server.id }}"
        state: "absent"
        auth_token: "{{ cherryservers_api_key }}"
      register: result
    - name: verify delete second server
      ansible.builtin.assert:
        that:
          - result is changed
