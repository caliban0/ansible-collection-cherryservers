---
- name: Run tests
  block:
    - name: test create ssh key missing parameter
      cherryservers.cloud.sshkey:
        label: "{{ key_label_1 }}"
        auth_token: "{{ cherryservers_api_key }}"
      register: first_sshkey
      ignore_errors: true
    - name: verify create ssh key missing parameter
      ansible.builtin.assert:
        that:
          - first_sshkey is failed

    - name: test create ssh key with check mode
      cherryservers.cloud.sshkey:
        label: "{{ key_label_1 }}"
        key: "{{ fake_public_key_1 }}"
        auth_token: "{{ cherryservers_api_key }}"
      register: first_sshkey
      check_mode: true
    - name: verify create ssh key with check mode
      ansible.builtin.assert:
        that:
          - first_sshkey is changed

    - name: test that no ssh key actually created
      cherryservers.cloud.sshkey_info:
        label: "{{ key_label_1 }}"
        key: "{{ fake_public_key_1 }}"
        auth_token: "{{ cherryservers_api_key }}"
      register: result
    - name: verify that no ssh key actually created
      ansible.builtin.assert:
        that:
          - result.cherryservers_sshkeys | list | count == 0
          - result is not changed

    - name: test create ssh key
      cherryservers.cloud.sshkey:
        label: "{{ key_label_1 }}"
        key: "{{ fake_public_key_1 }}"
        auth_token: "{{ cherryservers_api_key }}"
      register: first_sshkey
    - name: verify create ssh key
      ansible.builtin.assert:
        that:
          - first_sshkey is changed

    - name: test ssh key actually created
      cherryservers.cloud.sshkey_info:
        label: "{{ key_label_1 }}"
        key: "{{ fake_public_key_1 }}"
        auth_token: "{{ cherryservers_api_key }}"
      register: result
    - name: verify ssh key actually created
      ansible.builtin.assert:
        that:
          - result.cherryservers_sshkeys | list | count == 1

    - name: test key creation idempotency with check mode
      cherryservers.cloud.sshkey:
        label: "{{ key_label_1 }}"
        key: "{{ fake_public_key_1 }}"
        auth_token: "{{ cherryservers_api_key }}"
      register: result
      check_mode: true
    - name: verify key creation idempotency with check mode
      ansible.builtin.assert:
        that:
          - result is not changed

    - name: test key creation idempotency
      cherryservers.cloud.sshkey:
        label: "{{ key_label_1 }}"
        key: "{{ fake_public_key_1 }}"
        auth_token: "{{ cherryservers_api_key }}"
      register: result
    - name: verify key creation idempotency
      ansible.builtin.assert:
        that:
          - result is not changed

    - name: create second ssh key
      cherryservers.cloud.sshkey:
        label: "{{ key_label_2 }}"
        key: "{{ fake_public_key_2 }}"
        auth_token: "{{ cherryservers_api_key }}"
      register: second_sshkey
    - name: verify second ssh key
      ansible.builtin.assert:
        that:
          - second_sshkey is changed

    - name: test fail cleanly on update ambiguity
      cherryservers.cloud.sshkey:
        label: "{{ key_label_1 }}"
        key: "{{ fake_public_key_2 }}"
        auth_token: "{{ cherryservers_api_key }}"
      register: result
      ignore_errors: true
    - name: verify fail cleanly on update ambiguity
      ansible.builtin.assert:
        that:
          - result is failed

    - name: test update ssh key with check mode
      cherryservers.cloud.sshkey:
        id: "{{ first_sshkey.cherryservers_sshkey.id }}"
        label: "{{ key_label_1 }}_updated"
        key: "{{ fake_public_key_updated }}"
        auth_token: "{{ cherryservers_api_key }}"
      check_mode: true
      register: result
    - name: verify update ssh key with check mode
      ansible.builtin.assert:
        that:
          - result is changed

    - name: test no update actually happened
      cherryservers.cloud.sshkey_info:
        label: "{{ key_label_1 }}_updated"
        key: "{{ fake_public_key_updated }}"
        auth_token: "{{ cherryservers_api_key }}"
      register: result
    - name: verify no update actually happened
      ansible.builtin.assert:
        that:
          - result.cherryservers_sshkeys | list | count == 0
          - result is not changed

    - name: test update ssh key
      cherryservers.cloud.sshkey:
        id: "{{ first_sshkey.cherryservers_sshkey.id }}"
        label: "{{ key_label_1 }}_updated"
        key: "{{ fake_public_key_updated }}"
        auth_token: "{{ cherryservers_api_key }}"
      register: result
    - name: verify update ssh key
      ansible.builtin.assert:
        that:
          - result is changed

    - name: test update actually happened
      cherryservers.cloud.sshkey_info:
        label: "{{ key_label_1 }}_updated"
        key: "{{ fake_public_key_updated }}"
        auth_token: "{{ cherryservers_api_key }}"
      register: result
    - name: verify update actually happened
      ansible.builtin.assert:
        that:
          - result.cherryservers_sshkeys | list | count == 1

    - name: test key update idempotency with check mode
      cherryservers.cloud.sshkey:
        id: "{{ first_sshkey.cherryservers_sshkey.id }}"
        label: "{{ key_label_1 }}_updated"
        key: "{{ fake_public_key_updated }}"
        auth_token: "{{ cherryservers_api_key }}"
      register: result
      check_mode: true
    - name: verify key update idempotency with check mode
      ansible.builtin.assert:
        that:
          - result is not changed

    - name: test key update idempotency
      cherryservers.cloud.sshkey:
        id: "{{ first_sshkey.cherryservers_sshkey.id }}"
        label: "{{ key_label_1 }}_updated"
        key: "{{ fake_public_key_updated }}"
        auth_token: "{{ cherryservers_api_key }}"
      register: result
    - name: verify key update idempotency
      ansible.builtin.assert:
        that:
          - result is not changed

    - name: test delete keys no params
      cherryservers.cloud.sshkey:
        auth_token: "{{ cherryservers_api_key }}"
        state: absent
      register: result
    - name: verify delete keys no params
      ansible.builtin.assert:
        that:
          - result is not changed

    - name: test delete ssh key with check mode
      cherryservers.cloud.sshkey:
        label: "{{ key_label_1 }}_updated"
        key: "{{ fake_public_key_updated }}"
        auth_token: "{{ cherryservers_api_key }}"
        state: absent
      register: result
      check_mode: true
    - name: verify delete ssh key with check mode
      ansible.builtin.assert:
        that:
          - result is changed

    - name: test that no ssh key actually deleted
      cherryservers.cloud.sshkey_info:
        label: "{{ key_label_1 }}_updated"
        key: "{{ fake_public_key_updated }}"
        auth_token: "{{ cherryservers_api_key }}"
      register: result
    - name: verify that no ssh key actually deleted
      ansible.builtin.assert:
        that:
          - result.cherryservers_sshkeys | list | count == 1

    - name: test delete ssh key
      cherryservers.cloud.sshkey:
        label: "{{ key_label_1 }}_updated"
        key: "{{ fake_public_key_updated }}"
        auth_token: "{{ cherryservers_api_key }}"
        state: absent
      register: result
    - name: verify delete ssh key
      ansible.builtin.assert:
        that:
          - result is changed

    - name: test ssh key actually deleted
      cherryservers.cloud.sshkey_info:
        label: "{{ key_label_1 }}_updated"
        key: "{{ fake_public_key_updated }}"
        auth_token: "{{ cherryservers_api_key }}"
      register: result
    - name: verify ssh key actually deleted
      ansible.builtin.assert:
        that:
          - result.cherryservers_sshkeys | list | count == 0
          - result is not changed

    - name: test key delete idempotency with check mode
      cherryservers.cloud.sshkey:
        label: "{{ key_label_1 }}_updated"
        key: "{{ fake_public_key_updated }}"
        auth_token: "{{ cherryservers_api_key }}"
        state: absent
      register: result
      check_mode: true
    - name: verify key delete idempotency with check mode
      ansible.builtin.assert:
        that:
          - result is not changed

    - name: test key delete idempotency
      cherryservers.cloud.sshkey:
        label: "{{ key_label_1 }}_updated"
        key: "{{ fake_public_key_updated }}"
        auth_token: "{{ cherryservers_api_key }}"
        state: absent
      register: result
    - name: verify key delete idempotency with check mode
      ansible.builtin.assert:
        that:
          - result is not changed

  always:
    - name: delete test keys
      cherryservers.cloud.sshkey:
        label: "{{ key_label_1 }}_updated"
        key: "{{ fake_public_key_2 }}"
        id: "{{ first_sshkey.cherryservers_sshkey.id }}"
        auth_token: "{{ cherryservers_api_key }}"
        state: absent
      register: result
    - name: verify delete test keys
      ansible.builtin.assert:
        that:
          - result is changed